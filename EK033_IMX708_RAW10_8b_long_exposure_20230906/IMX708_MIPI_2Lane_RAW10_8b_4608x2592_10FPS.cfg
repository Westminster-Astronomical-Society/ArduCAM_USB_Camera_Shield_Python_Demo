;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX708
SIZE      = 4608, 2592
BIT_WIDTH = 8 
FORMAT    = 0, 3
I2C_MODE  = 2					
I2C_ADDR  = 0x34
;TRANS_LVL = 128

[control parameter]
MIN_VALUE   = 0
MAX_VALUE   = 1023
STEP        = 1
DEF 		= 439
CTRL_NAME	= Focus
FUNC_NAME	= setFocus
======CODE_BLOCK_START======
function setFocus(val)
    data = {0}
	val = math.floor(val)
	high = (val & 0x03FF) >> 8
	low = (val & 0xFF) 
	data[1] = high
	ret = SendVR(0xD7, 0x1800, 0x0300, 1, data)
	data[1] = low
	ret = SendVR(0xD7, 0x1800, 0x0400, 1, data)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 4
MAX_VALUE   = 10000
STEP        = 1
DEF 		= 10000
CTRL_NAME	= Framerate(0.001x)
FUNC_NAME	= setFramerate
======CODE_BLOCK_START======
function setFramerate(val)
    val = val / 1000
    local pix_clk_hz = 595200000
    -- line_length 0x0342 0x0343
    local hts = 19744
    local vts =  math.floor(pix_clk_hz/(hts*val))
    local shift = 0
    while(vts > 65535)
    do
        shift = shift + 1
        writeReg(0x3100, shift)
        vts = vts >> 1
    end
    -- vts 0x0340 0x0341
	writeReg(0x0340, (vts & 0xFF00) >> 8)
    writeReg(0x0341, (vts & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 34
MAX_VALUE   = 278263037
STEP        = 1
DEF 		= 86280
CTRL_NAME	= Exp(us)
FUNC_NAME	= setExposureTime
======CODE_BLOCK_START======
function setExposureTime(val)
    local ret, shift = readReg(0x3100)
    local hts = 19744
    local pix_clk_hz = 595200000
    local exp = math.floor(val*1000/(hts/pix_clk_hz*1e9)) >> shift

	writeReg(0x0202, (exp & 0xFF00) >> 8)
    writeReg(0x0203, (exp & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 100
MAX_VALUE   = 6400
STEP        = 100
DEF 		= 100
CTRL_NAME	= Gain(0.01x)
FUNC_NAME	= setAnalogueGain
======CODE_BLOCK_START======
function setAnalogueGain(val)
    -- vts 0x0204 0x0205
    local gain = math.floor(1024 - 1024 / (val / 100))

	writeReg(0x0204, (gain & 0xFF00) >> 8)
    writeReg(0x0205, (gain & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x55
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x0F
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0xD8
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x0B
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xE0
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x03
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x80
VRCMD = 0xD7, 0x4600, 0x2800, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x2900, 1, 0x00



[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x12
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0100, 0x00
REG = 0x0136, 0x18
REG = 0x0137, 0x00
REG = 0x33F0, 0x02
REG = 0x33F1, 0x05
REG = 0x3062, 0x00
REG = 0x3063, 0x12
REG = 0x3068, 0x00
REG = 0x3069, 0x12
REG = 0x306A, 0x00
REG = 0x306B, 0x30
REG = 0x3076, 0x00
REG = 0x3077, 0x30
REG = 0x3078, 0x00
REG = 0x3079, 0x30
REG = 0x5E54, 0x0C
REG = 0x6E44, 0x00
REG = 0xB0B6, 0x01
REG = 0xE829, 0x00
REG = 0xF001, 0x08
REG = 0xF003, 0x08
REG = 0xF00D, 0x10
REG = 0xF00F, 0x10
REG = 0xF031, 0x08
REG = 0xF033, 0x08
REG = 0xF03D, 0x10
REG = 0xF03F, 0x10
REG = 0x0112, 0x0A
REG = 0x0113, 0x0A
REG = 0x0114, 0x01
REG = 0x0B8E, 0x01
REG = 0x0B8F, 0x00
REG = 0x0B94, 0x01
REG = 0x0B95, 0x00
REG = 0x3400, 0x01
REG = 0x3478, 0x01
REG = 0x3479, 0x1c
REG = 0x3091, 0x01
REG = 0x3092, 0x00
REG = 0x3419, 0x00
REG = 0xBCF1, 0x02
REG = 0x3094, 0x01
REG = 0x3095, 0x01
REG = 0x3362, 0x00
REG = 0x3363, 0x00
REG = 0x3364, 0x00
REG = 0x3365, 0x00
REG = 0x0138, 0x01

REG = 0x0342, 0x4D
REG = 0x0343, 0x20
REG = 0x0340, 0x0B
REG = 0x0341, 0xC0

REG = 0x0344, 0x00
REG = 0x0345, 0x00
REG = 0x0346, 0x00
REG = 0x0347, 0x00
REG = 0x0348, 0x11
REG = 0x0349, 0xFF
REG = 0x034A, 0X0A
REG = 0x034B, 0x1F
REG = 0x0220, 0x62
REG = 0x0222, 0x01
REG = 0x0900, 0x00
REG = 0x0901, 0x11
REG = 0x0902, 0x0A
REG = 0x3200, 0x01
REG = 0x3201, 0x01
REG = 0x32D5, 0x01
REG = 0x32D6, 0x00
REG = 0x32DB, 0x01
REG = 0x32DF, 0x00
REG = 0x350C, 0x00
REG = 0x350D, 0x00
REG = 0x0408, 0x00
REG = 0x0409, 0x00
REG = 0x040A, 0x00
REG = 0x040B, 0x00
REG = 0x040C, 0x12
REG = 0x040D, 0x00
REG = 0x040E, 0x0A
REG = 0x040F, 0x20
REG = 0x034C, 0x12
REG = 0x034D, 0x00
REG = 0x034E, 0x0A
REG = 0x034F, 0x20
REG = 0x0301, 0x05
REG = 0x0303, 0x02
REG = 0x0305, 0x02
REG = 0x0306, 0x00
REG = 0x0307, 0x7C
REG = 0x030B, 0x02
REG = 0x030D, 0x04
REG = 0x030E, 0x01
REG = 0x030F, 0x30
REG = 0x0310, 0x01
REG = 0x3CA0, 0x00
REG = 0x3CA1, 0x64
REG = 0x3CA4, 0x00
REG = 0x3CA5, 0x00
REG = 0x3CA6, 0x00
REG = 0x3CA7, 0x00
REG = 0x3CAA, 0x00
REG = 0x3CAB, 0x00
REG = 0x3CB8, 0x00
REG = 0x3CB9, 0x08
REG = 0x3CBA, 0x00
REG = 0x3CBB, 0x00
REG = 0x3CBC, 0x00
REG = 0x3CBD, 0x3C
REG = 0x3CBE, 0x00
REG = 0x3CBF, 0x00
REG = 0x0202, 0x0A
REG = 0x0203, 0x29
REG = 0x0224, 0x01
REG = 0x0225, 0xF4
REG = 0x3116, 0x01
REG = 0x3117, 0xF4
REG = 0x0204, 0x00
REG = 0x0205, 0x00
REG = 0x0216, 0x00
REG = 0x0217, 0x00
REG = 0x0218, 0x01
REG = 0x0219, 0x00
REG = 0x020E, 0x01
REG = 0x020F, 0x00
REG = 0x3118, 0x00
REG = 0x3119, 0x00
REG = 0x311A, 0x01
REG = 0x311B, 0x00
REG = 0x341a, 0x00
REG = 0x341b, 0x00
REG = 0x341c, 0x00
REG = 0x341d, 0x00
REG = 0x341e, 0x01
REG = 0x341f, 0x20
REG = 0x3420, 0x00
REG = 0x3421, 0xd8
REG = 0xC428, 0x00
REG = 0xC429, 0x04
REG = 0x3366, 0x00
REG = 0x3367, 0x00
REG = 0x3368, 0x00
REG = 0x3369, 0x00

REG = 0x0350, 0x00

REG = 0x0100, 0x01


[register parameter][dev3][inf2]

[register parameter][dev3][inf3]
